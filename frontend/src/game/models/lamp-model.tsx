/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/models/lamp.glb -t
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { JSX } from "react";

type GLTFResult = GLTF & {
  nodes: {
    lamp_1: THREE.Mesh;
    lamp_2: THREE.Mesh;
    lamp_3: THREE.Mesh;
    lamp_4: THREE.Mesh;
    lamp_5: THREE.Mesh;
  };
  materials: {
    ["lamp_-_silver"]: THREE.MeshStandardMaterial;
    ["lamp_-_orange"]: THREE.MeshStandardMaterial;
    ["lamp_-_yellow_light"]: THREE.MeshStandardMaterial;
    ["lamp_-_dark_"]: THREE.MeshStandardMaterial;
    ["lamp_-_red"]: THREE.MeshStandardMaterial;
  };
  // @ts-expect-error Cannot find name
  animations: GLTFAction[];
};

export function LampModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/lamp.glb",
  ) as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.lamp_1.geometry}
        material={materials["lamp_-_silver"]}
      />
      <mesh
        geometry={nodes.lamp_2.geometry}
        material={materials["lamp_-_orange"]}
      />
      <mesh
        geometry={nodes.lamp_3.geometry}
        material={materials["lamp_-_yellow_light"]}
      />
      <mesh
        geometry={nodes.lamp_4.geometry}
        material={materials["lamp_-_dark_"]}
      />
      <mesh
        geometry={nodes.lamp_5.geometry}
        material={materials["lamp_-_red"]}
      />
    </group>
  );
}

useGLTF.preload("/models/lamp.glb");
