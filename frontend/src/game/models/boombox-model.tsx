/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/models/boombox-model.glb -t 
*/

import * as THREE from 'three'
import { JSX } from "react"
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    boombox_1: THREE.Mesh
    boombox_2: THREE.Mesh
    boombox_3: THREE.Mesh
    boombox_4: THREE.Mesh
    boombox_5: THREE.Mesh
    boombox_6: THREE.Mesh
    boombox_7: THREE.Mesh
    boombox_8: THREE.Mesh
  }
  materials: {
    ['boombox_-_silver']: THREE.MeshStandardMaterial
    ['boombox_-_orange']: THREE.MeshStandardMaterial
    ['boombox_-_blue']: THREE.MeshStandardMaterial
    ['boombox_-_light']: THREE.MeshStandardMaterial
    ['boombox_-_black']: THREE.MeshStandardMaterial
    ['boombox_-_red']: THREE.MeshStandardMaterial
    ['boombox_-_green']: THREE.MeshStandardMaterial
    boombox_dark: THREE.MeshStandardMaterial
  }
  // @ts-expect-error Cannot find name
  animations: GLTFAction[]
}

export function BoomboxModel(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/boombox-model.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.boombox_1.geometry} material={materials['boombox_-_silver']} />
      <mesh geometry={nodes.boombox_2.geometry} material={materials['boombox_-_orange']} />
      <mesh geometry={nodes.boombox_3.geometry} material={materials['boombox_-_blue']} />
      <mesh geometry={nodes.boombox_4.geometry} material={materials['boombox_-_light']} />
      <mesh geometry={nodes.boombox_5.geometry} material={materials['boombox_-_black']} />
      <mesh geometry={nodes.boombox_6.geometry} material={materials['boombox_-_red']} />
      <mesh geometry={nodes.boombox_7.geometry} material={materials['boombox_-_green']} />
      <mesh geometry={nodes.boombox_8.geometry} material={materials.boombox_dark} />
    </group>
  )
}

useGLTF.preload('/models/boombox-model.glb')
